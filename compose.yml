services:
  dashboard:
    image: traefik:v3.1
    command:
      - "--configFile=/etc/traefik/static_conf.yml"
    ports:
      - "80:80"
      - "443:443"
    labels:
      traefik.enable: true
      traefik.http.routers.dashboard.rule: Host(`${TRAEFIK_DOMAIN}`)
      traefik.http.routers.dashboard.service: api@internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik_misc:/etc/traefik:ro

  redis:
    image: redis
    env_file: ./docker.env
    volumes:
      - redis:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres
    env_file: ./docker.env
    volumes: 
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3

  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    env_file: ./docker.env
    volumes:
      - outline-storage:/var/lib/outline/data
    depends_on:
      - postgres
      - redis
    labels:
      traefik.enable: true
      traefik.http.routers.outline.rule: Host(`${DOMAIN}`)
    environment:
      - DOMAIN=${DOMAIN}
      - SECRET_KEY=${SECRET_KEY}
      - UTILS_SECRET=${UTILS_SECRET}
      - SLACK_CLIENT_ID=${SLACK_CLIENT_ID}
      - SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET}
      - SLACK_VERTIFICATION_TOKEN=${SLACK_VERTIFICATION_TOKEN}
      - SLACK_APP_ID=${SLACK_APP_ID}
      - SLACK_MESSAGE_ACTIONS=${SLACK_MESSAGE_ACTIONS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SECURE=${SMTP_SECURE}
      
volumes:
  outline-storage:
  redis:
  database:
# mkcert -key-file ./traefik_misc/tsl.key -cert-file ./traefik_misc/tsl.crt *.localhost 